/**
 * SLASCONE API
 * Please visit our official [Documentation](https://support.slascone.com/hc/en-us/sections/360004685737-API) and/or our [GitHub repository](https://github.com/slascone/) and/or our [NuGet package](https://www.nuget.org/packages/Slascone.Client/). Always use Version 2 of this API (Version 1.3 is deprecated).
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.11.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * EmailConfigurationDto.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_EmailConfigurationDto_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_EmailConfigurationDto_H_


#include "SlasconeOpenApiClient/ModelBase.h"

#include <cpprest/details/basic_types.h>
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// 
/// </summary>
class  EmailConfigurationDto
    : public ModelBase
{
public:
    EmailConfigurationDto();
    virtual ~EmailConfigurationDto();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// EmailConfigurationDto members

    /// <summary>
    /// 
    /// </summary>
    bool isInheritFromVendor() const;
    bool inheritFromVendorIsSet() const;
    void unsetInherit_from_vendor();

    void setInheritFromVendor(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isUseAzureCommunicationService() const;
    bool useAzureCommunicationServiceIsSet() const;
    void unsetUse_azure_communication_service();

    void setUseAzureCommunicationService(bool value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getFromEmail() const;
    bool fromEmailIsSet() const;
    void unsetFrom_email();

    void setFromEmail(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getPassword() const;
    bool passwordIsSet() const;
    void unsetPassword();

    void setPassword(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<utility::string_t>& getToEmail();
    bool toEmailIsSet() const;
    void unsetTo_email();

    void setToEmail(const std::vector<utility::string_t>& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getSmtpClient() const;
    bool smtpClientIsSet() const;
    void unsetSmtp_client();

    void setSmtpClient(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getSmtpPort() const;
    bool smtpPortIsSet() const;
    void unsetSmtp_port();

    void setSmtpPort(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getAcsSenderDomain() const;
    bool acsSenderDomainIsSet() const;
    void unsetAcs_sender_domain();

    void setAcsSenderDomain(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getAcsSenderUsername() const;
    bool acsSenderUsernameIsSet() const;
    void unsetAcs_sender_username();

    void setAcsSenderUsername(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::datetime getCreatedDateUtc() const;
    bool createdDateUtcIsSet() const;
    void unsetCreated_date_utc();

    void setCreatedDateUtc(const utility::datetime& value);

    /// <summary>
    /// 
    /// </summary>
    utility::datetime getModifiedDateUtc() const;
    bool modifiedDateUtcIsSet() const;
    void unsetModified_date_utc();

    void setModifiedDateUtc(const utility::datetime& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getLastModifiedBy() const;
    bool lastModifiedByIsSet() const;
    void unsetLast_modified_by();

    void setLastModifiedBy(const utility::string_t& value);


protected:
    bool m_Inherit_from_vendor;
    bool m_Inherit_from_vendorIsSet;
    bool m_Use_azure_communication_service;
    bool m_Use_azure_communication_serviceIsSet;
    utility::string_t m_From_email;
    bool m_From_emailIsSet;
    utility::string_t m_Password;
    bool m_PasswordIsSet;
    std::vector<utility::string_t> m_To_email;
    bool m_To_emailIsSet;
    utility::string_t m_Smtp_client;
    bool m_Smtp_clientIsSet;
    int32_t m_Smtp_port;
    bool m_Smtp_portIsSet;
    utility::string_t m_Acs_sender_domain;
    bool m_Acs_sender_domainIsSet;
    utility::string_t m_Acs_sender_username;
    bool m_Acs_sender_usernameIsSet;
    utility::datetime m_Created_date_utc;
    bool m_Created_date_utcIsSet;
    utility::datetime m_Modified_date_utc;
    bool m_Modified_date_utcIsSet;
    utility::string_t m_Last_modified_by;
    bool m_Last_modified_byIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_EmailConfigurationDto_H_ */
