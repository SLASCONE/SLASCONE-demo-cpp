/**
 * SLASCONE API
 * Please visit our official [Documentation](https://support.slascone.com/hc/en-us/sections/360004685737-API) and/or our [GitHub repository](https://github.com/slascone/) and/or our [NuGet package](https://www.nuget.org/packages/Slascone.Client/). Always use Version 2 of this API (Version 1.3 is deprecated).
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.11.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CustomerDto.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_CustomerDto_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_CustomerDto_H_


#include "SlasconeOpenApiClient/ModelBase.h"

#include "SlasconeOpenApiClient/model/TagAssignmentDto.h"
#include "SlasconeOpenApiClient/model/CustomerTypeDto.h"
#include "SlasconeOpenApiClient/model/ResourceDto.h"
#include <cpprest/details/basic_types.h>
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {

class CustomerTypeDto;
class TagAssignmentDto;
class ResourceDto;


/// <summary>
/// 
/// </summary>
class  CustomerDto
    : public ModelBase
{
public:
    CustomerDto();
    virtual ~CustomerDto();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// CustomerDto members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getId() const;
    bool idIsSet() const;
    void unsetId();

    void setId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCompanyName() const;
    bool companyNameIsSet() const;
    void unsetCompany_name();

    void setCompanyName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCustomerNumber() const;
    bool customerNumberIsSet() const;
    void unsetCustomer_number();

    void setCustomerNumber(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CustomerTypeDto> getCustomerType() const;
    bool customerTypeIsSet() const;
    void unsetCustomer_type();

    void setCustomerType(const std::shared_ptr<CustomerTypeDto>& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getEmail() const;
    bool emailIsSet() const;
    void unsetEmail();

    void setEmail(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getStreet() const;
    bool streetIsSet() const;
    void unsetStreet();

    void setStreet(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCity() const;
    bool cityIsSet() const;
    void unsetCity();

    void setCity(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getPostalcode() const;
    bool postalcodeIsSet() const;
    void unsetPostalcode();

    void setPostalcode(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCountry() const;
    bool countryIsSet() const;
    void unsetCountry();

    void setCountry(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getPhone() const;
    bool phoneIsSet() const;
    void unsetPhone();

    void setPhone(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getProspectNumber() const;
    bool prospectNumberIsSet() const;
    void unsetProspect_number();

    void setProspectNumber(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    double getLongitude() const;
    bool longitudeIsSet() const;
    void unsetLongitude();

    void setLongitude(double value);

    /// <summary>
    /// 
    /// </summary>
    double getLatitude() const;
    bool latitudeIsSet() const;
    void unsetLatitude();

    void setLatitude(double value);

    /// <summary>
    /// 
    /// </summary>
    utility::datetime getCreatedDateUtc() const;
    bool createdDateUtcIsSet() const;
    void unsetCreated_date_utc();

    void setCreatedDateUtc(const utility::datetime& value);

    /// <summary>
    /// 
    /// </summary>
    utility::datetime getModifiedDateUtc() const;
    bool modifiedDateUtcIsSet() const;
    void unsetModified_date_utc();

    void setModifiedDateUtc(const utility::datetime& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getLastModifiedBy() const;
    bool lastModifiedByIsSet() const;
    void unsetLast_modified_by();

    void setLastModifiedBy(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<TagAssignmentDto>>& getTagAssignments();
    bool tagAssignmentsIsSet() const;
    void unsetTag_assignments();

    void setTagAssignments(const std::vector<std::shared_ptr<TagAssignmentDto>>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ResourceDto> getLogo() const;
    bool logoIsSet() const;
    void unsetLogo();

    void setLogo(const std::shared_ptr<ResourceDto>& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getResellerId() const;
    bool resellerIdIsSet() const;
    void unsetReseller_id();

    void setResellerId(const utility::string_t& value);


protected:
    utility::string_t m_Id;
    bool m_IdIsSet;
    utility::string_t m_Company_name;
    bool m_Company_nameIsSet;
    utility::string_t m_Customer_number;
    bool m_Customer_numberIsSet;
    std::shared_ptr<CustomerTypeDto> m_Customer_type;
    bool m_Customer_typeIsSet;
    utility::string_t m_Email;
    bool m_EmailIsSet;
    utility::string_t m_Street;
    bool m_StreetIsSet;
    utility::string_t m_City;
    bool m_CityIsSet;
    utility::string_t m_Postalcode;
    bool m_PostalcodeIsSet;
    utility::string_t m_Country;
    bool m_CountryIsSet;
    utility::string_t m_Phone;
    bool m_PhoneIsSet;
    utility::string_t m_Prospect_number;
    bool m_Prospect_numberIsSet;
    double m_Longitude;
    bool m_LongitudeIsSet;
    double m_Latitude;
    bool m_LatitudeIsSet;
    utility::datetime m_Created_date_utc;
    bool m_Created_date_utcIsSet;
    utility::datetime m_Modified_date_utc;
    bool m_Modified_date_utcIsSet;
    utility::string_t m_Last_modified_by;
    bool m_Last_modified_byIsSet;
    std::vector<std::shared_ptr<TagAssignmentDto>> m_Tag_assignments;
    bool m_Tag_assignmentsIsSet;
    std::shared_ptr<ResourceDto> m_Logo;
    bool m_LogoIsSet;
    utility::string_t m_Reseller_id;
    bool m_Reseller_idIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_CustomerDto_H_ */
