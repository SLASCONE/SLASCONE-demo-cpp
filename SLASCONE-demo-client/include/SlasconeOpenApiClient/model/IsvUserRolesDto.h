/**
 * SLASCONE API
 * Please visit our official [Documentation](https://support.slascone.com/hc/en-us/sections/360004685737-API) and/or our [GitHub repository](https://github.com/slascone/) and/or our [NuGet package](https://www.nuget.org/packages/Slascone.Client/). Always use Version 2 of this API (Version 1.3 is deprecated).
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.11.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * IsvUserRolesDto.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_IsvUserRolesDto_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_IsvUserRolesDto_H_


#include "SlasconeOpenApiClient/ModelBase.h"

#include "SlasconeOpenApiClient/model/ResellerPortalRoleDto.h"
#include <cpprest/details/basic_types.h>
#include <vector>
#include "SlasconeOpenApiClient/model/CustomerPortalRoleDto.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

class ResellerPortalRoleDto;
class CustomerPortalRoleDto;


/// <summary>
/// 
/// </summary>
class  IsvUserRolesDto
    : public ModelBase
{
public:
    IsvUserRolesDto();
    virtual ~IsvUserRolesDto();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// IsvUserRolesDto members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getIsvId() const;
    bool isvIdIsSet() const;
    void unsetIsvId();

    void setIsvId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getIsvName() const;
    bool isvNameIsSet() const;
    void unsetIsvName();

    void setIsvName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getUserId() const;
    bool userIdIsSet() const;
    void unsetUserId();

    void setUserId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getVendorRoleId() const;
    bool vendorRoleIdIsSet() const;
    void unsetVendorRoleId();

    void setVendorRoleId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<ResellerPortalRoleDto>>& getResellerPortalRoles();
    bool resellerPortalRolesIsSet() const;
    void unsetResellerPortalRoles();

    void setResellerPortalRoles(const std::vector<std::shared_ptr<ResellerPortalRoleDto>>& value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<CustomerPortalRoleDto>>& getCustomerPortalRoles();
    bool customerPortalRolesIsSet() const;
    void unsetCustomerPortalRoles();

    void setCustomerPortalRoles(const std::vector<std::shared_ptr<CustomerPortalRoleDto>>& value);


protected:
    utility::string_t m_IsvId;
    bool m_IsvIdIsSet;
    utility::string_t m_IsvName;
    bool m_IsvNameIsSet;
    utility::string_t m_UserId;
    bool m_UserIdIsSet;
    utility::string_t m_VendorRoleId;
    bool m_VendorRoleIdIsSet;
    std::vector<std::shared_ptr<ResellerPortalRoleDto>> m_ResellerPortalRoles;
    bool m_ResellerPortalRolesIsSet;
    std::vector<std::shared_ptr<CustomerPortalRoleDto>> m_CustomerPortalRoles;
    bool m_CustomerPortalRolesIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_IsvUserRolesDto_H_ */
