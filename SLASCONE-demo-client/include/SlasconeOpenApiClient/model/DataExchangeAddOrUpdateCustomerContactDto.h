/**
 * SLASCONE API
 * Please visit our official [Documentation](https://support.slascone.com/hc/en-us/sections/360004685737-API) and/or our [GitHub repository](https://github.com/slascone/) and/or our [NuGet package](https://www.nuget.org/packages/Slascone.Client/). Always use Version 2 of this API (Version 1.3 is deprecated).
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.11.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * DataExchangeAddOrUpdateCustomerContactDto.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_DataExchangeAddOrUpdateCustomerContactDto_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_DataExchangeAddOrUpdateCustomerContactDto_H_


#include "SlasconeOpenApiClient/ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// 
/// </summary>
class  DataExchangeAddOrUpdateCustomerContactDto
    : public ModelBase
{
public:
    DataExchangeAddOrUpdateCustomerContactDto();
    virtual ~DataExchangeAddOrUpdateCustomerContactDto();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// DataExchangeAddOrUpdateCustomerContactDto members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCustomerNumber() const;
    bool customerNumberIsSet() const;
    void unsetCustomer_number();

    void setCustomerNumber(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getContactName() const;
    bool contactNameIsSet() const;
    void unsetContact_name();

    void setContactName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getContactSurname() const;
    bool contactSurnameIsSet() const;
    void unsetContact_surname();

    void setContactSurname(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getEmail() const;
    bool emailIsSet() const;
    void unsetEmail();

    void setEmail(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getPhone() const;
    bool phoneIsSet() const;
    void unsetPhone();

    void setPhone(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getMobil() const;
    bool mobilIsSet() const;
    void unsetMobil();

    void setMobil(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getLanguage() const;
    bool languageIsSet() const;
    void unsetLanguage();

    void setLanguage(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    bool isIsCustomerPortalUser() const;
    bool isCustomerPortalUserIsSet() const;
    void unsetIs_customer_portal_user();

    void setIsCustomerPortalUser(bool value);


protected:
    utility::string_t m_Customer_number;
    bool m_Customer_numberIsSet;
    utility::string_t m_Contact_name;
    bool m_Contact_nameIsSet;
    utility::string_t m_Contact_surname;
    bool m_Contact_surnameIsSet;
    utility::string_t m_Email;
    bool m_EmailIsSet;
    utility::string_t m_Phone;
    bool m_PhoneIsSet;
    utility::string_t m_Mobil;
    bool m_MobilIsSet;
    utility::string_t m_Language;
    bool m_LanguageIsSet;
    bool m_Is_customer_portal_user;
    bool m_Is_customer_portal_userIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_DataExchangeAddOrUpdateCustomerContactDto_H_ */
