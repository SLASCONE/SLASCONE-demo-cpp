/**
 * SLASCONE API
 * Please visit our official [Documentation](https://support.slascone.com/hc/en-us/sections/360004685737-API) and/or our [GitHub repository](https://github.com/slascone/) and/or our [NuGet package](https://www.nuget.org/packages/Slascone.Client/). Always use Version 2 of this API (Version 1.3 is deprecated).
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.11.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CustomerLazyLoadDto.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_CustomerLazyLoadDto_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_CustomerLazyLoadDto_H_


#include "SlasconeOpenApiClient/ModelBase.h"

#include <cpprest/details/basic_types.h>
#include "SlasconeOpenApiClient/model/CustomerDto.h"
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {

class CustomerDto;


/// <summary>
/// 
/// </summary>
class  CustomerLazyLoadDto
    : public ModelBase
{
public:
    CustomerLazyLoadDto();
    virtual ~CustomerLazyLoadDto();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// CustomerLazyLoadDto members

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<CustomerDto>>& getCustomers();
    bool customersIsSet() const;
    void unsetCustomers();

    void setCustomers(const std::vector<std::shared_ptr<CustomerDto>>& value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getMaxCount() const;
    bool maxCountIsSet() const;
    void unsetMax_count();

    void setMaxCount(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<utility::string_t>& getCustomerCharacters();
    bool customerCharactersIsSet() const;
    void unsetCustomer_characters();

    void setCustomerCharacters(const std::vector<utility::string_t>& value);


protected:
    std::vector<std::shared_ptr<CustomerDto>> m_Customers;
    bool m_CustomersIsSet;
    int32_t m_Max_count;
    bool m_Max_countIsSet;
    std::vector<utility::string_t> m_Customer_characters;
    bool m_Customer_charactersIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_CustomerLazyLoadDto_H_ */
