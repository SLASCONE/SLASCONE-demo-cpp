/**
 * SLASCONE API
 * Please visit our official [Documentation](https://support.slascone.com/hc/en-us/sections/360004685737-API) and/or our [GitHub repository](https://github.com/slascone/) and/or our [NuGet package](https://www.nuget.org/packages/Slascone.Client/). Always use Version 2 of this API (Version 1.3 is deprecated).
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.11.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * LicenseLimitationDto.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_LicenseLimitationDto_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_LicenseLimitationDto_H_


#include "SlasconeOpenApiClient/ModelBase.h"

#include "SlasconeOpenApiClient/model/ConsumptionResetPeriod.h"
#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// 
/// </summary>
class  LicenseLimitationDto
    : public ModelBase
{
public:
    LicenseLimitationDto();
    virtual ~LicenseLimitationDto();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// LicenseLimitationDto members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getProductId() const;
    bool productIdIsSet() const;
    void unsetProduct_id();

    void setProductId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getLimitationId() const;
    bool limitationIdIsSet() const;
    void unsetLimitation_id();

    void setLimitationId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getLimitationName() const;
    bool limitationNameIsSet() const;
    void unsetLimitation_name();

    void setLimitationName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getLimitationDescription() const;
    bool limitationDescriptionIsSet() const;
    void unsetLimitation_description();

    void setLimitationDescription(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getLimit() const;
    bool limitIsSet() const;
    void unsetLimit();

    void setLimit(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConsumptionResetPeriod> getConsumptionResetMode() const;
    bool consumptionResetModeIsSet() const;
    void unsetConsumption_reset_mode();

    void setConsumptionResetMode(const std::shared_ptr<ConsumptionResetPeriod>& value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getConsumptionResetPeriodDays() const;
    bool consumptionResetPeriodDaysIsSet() const;
    void unsetConsumption_reset_period_days();

    void setConsumptionResetPeriodDays(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCurrentUserTransactionId() const;
    bool currentUserTransactionIdIsSet() const;
    void unsetCurrent_user_transaction_id();

    void setCurrentUserTransactionId(const utility::string_t& value);


protected:
    utility::string_t m_Product_id;
    bool m_Product_idIsSet;
    utility::string_t m_Limitation_id;
    bool m_Limitation_idIsSet;
    utility::string_t m_Limitation_name;
    bool m_Limitation_nameIsSet;
    utility::string_t m_Limitation_description;
    bool m_Limitation_descriptionIsSet;
    int32_t m_Limit;
    bool m_LimitIsSet;
    std::shared_ptr<ConsumptionResetPeriod> m_Consumption_reset_mode;
    bool m_Consumption_reset_modeIsSet;
    int32_t m_Consumption_reset_period_days;
    bool m_Consumption_reset_period_daysIsSet;
    utility::string_t m_Current_user_transaction_id;
    bool m_Current_user_transaction_idIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_LicenseLimitationDto_H_ */
