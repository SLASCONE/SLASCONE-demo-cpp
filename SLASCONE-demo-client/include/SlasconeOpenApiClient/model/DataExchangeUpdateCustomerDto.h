/**
 * SLASCONE API
 * Please visit our official [Documentation](https://support.slascone.com/hc/en-us/sections/360004685737-API) and/or our [GitHub repository](https://github.com/slascone/) and/or our [NuGet package](https://www.nuget.org/packages/Slascone.Client/). Always use Version 2 of this API (Version 1.3 is deprecated).
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.11.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * DataExchangeUpdateCustomerDto.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_DataExchangeUpdateCustomerDto_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_DataExchangeUpdateCustomerDto_H_


#include "SlasconeOpenApiClient/ModelBase.h"

#include <cpprest/details/basic_types.h>
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// 
/// </summary>
class  DataExchangeUpdateCustomerDto
    : public ModelBase
{
public:
    DataExchangeUpdateCustomerDto();
    virtual ~DataExchangeUpdateCustomerDto();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// DataExchangeUpdateCustomerDto members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCustomerNumber() const;
    bool customerNumberIsSet() const;
    void unsetCustomer_number();

    void setCustomerNumber(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCustomerName() const;
    bool customerNameIsSet() const;
    void unsetCustomer_name();

    void setCustomerName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCustomerType() const;
    bool customerTypeIsSet() const;
    void unsetCustomer_type();

    void setCustomerType(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCountry() const;
    bool countryIsSet() const;
    void unsetCountry();

    void setCountry(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getStreet() const;
    bool streetIsSet() const;
    void unsetStreet();

    void setStreet(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getZip() const;
    bool zipIsSet() const;
    void unsetZip();

    void setZip(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCity() const;
    bool cityIsSet() const;
    void unsetCity();

    void setCity(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getPhone() const;
    bool phoneIsSet() const;
    void unsetPhone();

    void setPhone(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getEmail() const;
    bool emailIsSet() const;
    void unsetEmail();

    void setEmail(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getProspectNumber() const;
    bool prospectNumberIsSet() const;
    void unsetProspect_number();

    void setProspectNumber(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<utility::string_t>& getTags();
    bool tagsIsSet() const;
    void unsetTags();

    void setTags(const std::vector<utility::string_t>& value);


protected:
    utility::string_t m_Customer_number;
    bool m_Customer_numberIsSet;
    utility::string_t m_Customer_name;
    bool m_Customer_nameIsSet;
    utility::string_t m_Customer_type;
    bool m_Customer_typeIsSet;
    utility::string_t m_Country;
    bool m_CountryIsSet;
    utility::string_t m_Street;
    bool m_StreetIsSet;
    utility::string_t m_Zip;
    bool m_ZipIsSet;
    utility::string_t m_City;
    bool m_CityIsSet;
    utility::string_t m_Phone;
    bool m_PhoneIsSet;
    utility::string_t m_Email;
    bool m_EmailIsSet;
    utility::string_t m_Prospect_number;
    bool m_Prospect_numberIsSet;
    std::vector<utility::string_t> m_Tags;
    bool m_TagsIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_DataExchangeUpdateCustomerDto_H_ */
