/**
 * SLASCONE API
 * Please visit our official [Documentation](https://support.slascone.com/hc/en-us/sections/360004685737-API) and/or our [GitHub repository](https://github.com/slascone/) and/or our [NuGet package](https://www.nuget.org/packages/Slascone.Client/). Always use Version 2 of this API (Version 1.3 is deprecated).
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.11.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * MailLogDto.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_MailLogDto_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_MailLogDto_H_


#include "SlasconeOpenApiClient/ModelBase.h"

#include "SlasconeOpenApiClient/model/CustomerContactDto.h"
#include "SlasconeOpenApiClient/model/EmailTemplateDto.h"
#include <cpprest/details/basic_types.h>
#include "SlasconeOpenApiClient/model/AlertDto.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

class CustomerContactDto;
class EmailTemplateDto;
class AlertDto;


/// <summary>
/// 
/// </summary>
class  MailLogDto
    : public ModelBase
{
public:
    MailLogDto();
    virtual ~MailLogDto();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// MailLogDto members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getId() const;
    bool idIsSet() const;
    void unsetId();

    void setId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getReceivers() const;
    bool receiversIsSet() const;
    void unsetReceivers();

    void setReceivers(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCcs() const;
    bool ccsIsSet() const;
    void unsetCcs();

    void setCcs(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getSubject() const;
    bool subjectIsSet() const;
    void unsetSubject();

    void setSubject(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getBody() const;
    bool bodyIsSet() const;
    void unsetBody();

    void setBody(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    bool isWasLicenseFileAttached() const;
    bool wasLicenseFileAttachedIsSet() const;
    void unsetWas_license_file_attached();

    void setWasLicenseFileAttached(bool value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCustomerContactId() const;
    bool customerContactIdIsSet() const;
    void unsetCustomer_contact_id();

    void setCustomerContactId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CustomerContactDto> getCustomerContact() const;
    bool customerContactIsSet() const;
    void unsetCustomer_contact();

    void setCustomerContact(const std::shared_ptr<CustomerContactDto>& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getLicenseId() const;
    bool licenseIdIsSet() const;
    void unsetLicense_id();

    void setLicenseId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getEmailTemplateId() const;
    bool emailTemplateIdIsSet() const;
    void unsetEmail_template_id();

    void setEmailTemplateId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<EmailTemplateDto> getEmailTemplate() const;
    bool emailTemplateIsSet() const;
    void unsetEmail_template();

    void setEmailTemplate(const std::shared_ptr<EmailTemplateDto>& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getAlertId() const;
    bool alertIdIsSet() const;
    void unsetAlert_id();

    void setAlertId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<AlertDto> getAlert() const;
    bool alertIsSet() const;
    void unsetAlert();

    void setAlert(const std::shared_ptr<AlertDto>& value);

    /// <summary>
    /// 
    /// </summary>
    utility::datetime getCreatedDateUtc() const;
    bool createdDateUtcIsSet() const;
    void unsetCreated_date_utc();

    void setCreatedDateUtc(const utility::datetime& value);

    /// <summary>
    /// 
    /// </summary>
    utility::datetime getModifiedDateUtc() const;
    bool modifiedDateUtcIsSet() const;
    void unsetModified_date_utc();

    void setModifiedDateUtc(const utility::datetime& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getLastModifiedBy() const;
    bool lastModifiedByIsSet() const;
    void unsetLast_modified_by();

    void setLastModifiedBy(const utility::string_t& value);


protected:
    utility::string_t m_Id;
    bool m_IdIsSet;
    utility::string_t m_Receivers;
    bool m_ReceiversIsSet;
    utility::string_t m_Ccs;
    bool m_CcsIsSet;
    utility::string_t m_Subject;
    bool m_SubjectIsSet;
    utility::string_t m_Body;
    bool m_BodyIsSet;
    bool m_Was_license_file_attached;
    bool m_Was_license_file_attachedIsSet;
    utility::string_t m_Customer_contact_id;
    bool m_Customer_contact_idIsSet;
    std::shared_ptr<CustomerContactDto> m_Customer_contact;
    bool m_Customer_contactIsSet;
    utility::string_t m_License_id;
    bool m_License_idIsSet;
    utility::string_t m_Email_template_id;
    bool m_Email_template_idIsSet;
    std::shared_ptr<EmailTemplateDto> m_Email_template;
    bool m_Email_templateIsSet;
    utility::string_t m_Alert_id;
    bool m_Alert_idIsSet;
    std::shared_ptr<AlertDto> m_Alert;
    bool m_AlertIsSet;
    utility::datetime m_Created_date_utc;
    bool m_Created_date_utcIsSet;
    utility::datetime m_Modified_date_utc;
    bool m_Modified_date_utcIsSet;
    utility::string_t m_Last_modified_by;
    bool m_Last_modified_byIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_MailLogDto_H_ */
