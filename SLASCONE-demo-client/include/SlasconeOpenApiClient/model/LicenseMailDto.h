/**
 * SLASCONE API
 * Please visit our official [Documentation](https://support.slascone.com/hc/en-us/sections/360004685737-API) and/or our [GitHub repository](https://github.com/slascone/) and/or our [NuGet package](https://www.nuget.org/packages/Slascone.Client/). Always use Version 2 of this API (Version 1.3 is deprecated).
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.11.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * LicenseMailDto.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_LicenseMailDto_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_LicenseMailDto_H_


#include "SlasconeOpenApiClient/ModelBase.h"

#include <cpprest/details/basic_types.h>
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// 
/// </summary>
class  LicenseMailDto
    : public ModelBase
{
public:
    LicenseMailDto();
    virtual ~LicenseMailDto();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// LicenseMailDto members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getLicenseKey() const;
    bool licenseKeyIsSet() const;
    void unsetLicenseKey();

    void setLicenseKey(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getEmailTemplateId() const;
    bool emailTemplateIdIsSet() const;
    void unsetEmailTemplateId();

    void setEmailTemplateId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getLanguage() const;
    bool languageIsSet() const;
    void unsetLanguage();

    void setLanguage(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getProductId() const;
    bool productIdIsSet() const;
    void unsetProductId();

    void setProductId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<utility::string_t>& getToEmails();
    bool toEmailsIsSet() const;
    void unsetToEmails();

    void setToEmails(const std::vector<utility::string_t>& value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<utility::string_t>& getCcEmails();
    bool ccEmailsIsSet() const;
    void unsetCcEmails();

    void setCcEmails(const std::vector<utility::string_t>& value);


protected:
    utility::string_t m_LicenseKey;
    bool m_LicenseKeyIsSet;
    utility::string_t m_EmailTemplateId;
    bool m_EmailTemplateIdIsSet;
    utility::string_t m_Language;
    bool m_LanguageIsSet;
    utility::string_t m_ProductId;
    bool m_ProductIdIsSet;
    std::vector<utility::string_t> m_ToEmails;
    bool m_ToEmailsIsSet;
    std::vector<utility::string_t> m_CcEmails;
    bool m_CcEmailsIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_LicenseMailDto_H_ */
