/**
 * SLASCONE API
 * Please visit our official [Documentation](https://support.slascone.com/hc/en-us/sections/360004685737-API) and/or our [GitHub repository](https://github.com/slascone/) and/or our [NuGet package](https://www.nuget.org/packages/Slascone.Client/). Always use Version 2 of this API (Version 1.3 is deprecated).
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.11.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * DataGatheringApi.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_API_DataGatheringApi_H_
#define ORG_OPENAPITOOLS_CLIENT_API_DataGatheringApi_H_



#include "SlasconeOpenApiClient/ApiClient.h"

#include "SlasconeOpenApiClient/model/AnalyticalHeartbeatDto.h"
#include "SlasconeOpenApiClient/model/AnalyticalHeartbeatResponseErrors.h"
#include "SlasconeOpenApiClient/model/ConsumptionDto.h"
#include "SlasconeOpenApiClient/model/ConsumptionHeartbeatResponseErrors.h"
#include "SlasconeOpenApiClient/model/ConsumptionRollbackResponseErrors.h"
#include "SlasconeOpenApiClient/model/ConsumptionTransactionDto.h"
#include "SlasconeOpenApiClient/model/FullConsumptionHeartbeatDto.h"
#include "SlasconeOpenApiClient/model/FullUsageHeartbeatByNameDto.h"
#include "SlasconeOpenApiClient/model/FullUsageHeartbeatDto.h"
#include "SlasconeOpenApiClient/model/ProblemDetails.h"
#include "SlasconeOpenApiClient/model/UsageHeartbeatByFeatureNameResponseErrors.h"
#include "SlasconeOpenApiClient/model/UsageHeartbeatResponseErrors.h"
#include <vector>
#include <cpprest/details/basic_types.h>
#include <boost/optional.hpp>

namespace org {
namespace openapitools {
namespace client {
namespace api {

using namespace org::openapitools::client::model;



class  DataGatheringApi 
{
public:

    explicit DataGatheringApi( std::shared_ptr<const ApiClient> apiClient );

    virtual ~DataGatheringApi();

    /// <summary>
    /// Creates an analytical heartbeat
    /// </summary>
    /// <remarks>
    /// &lt;a href&#x3D;\&quot;https://support.slascone.com/hc/en-us/articles/360016055537-PRODUCT-ANALYTICS\&quot;&gt;More Information&lt;/a&gt;.
    /// </remarks>
    /// <param name="isvId"></param>
    /// <param name="analyticalHeartbeatDto"></param>
    pplx::task<utility::string_t> addAnalyticalHeartbeat(
        utility::string_t isvId,
        std::shared_ptr<AnalyticalHeartbeatDto> analyticalHeartbeatDto
    ) const;
    /// <summary>
    /// Creates a consumption heartbeat
    /// </summary>
    /// <remarks>
    /// &lt;a href&#x3D;\&quot;https://support.slascone.com/hc/en-us/articles/360016057197-CONSUMPTION-BASED-LIMITATIONS\&quot;&gt;More Information&lt;/a&gt;.
    /// </remarks>
    /// <param name="isvId"></param>
    /// <param name="fullConsumptionHeartbeatDto"></param>
    pplx::task<std::vector<std::shared_ptr<ConsumptionDto>>> addConsumptionHeartbeat(
        utility::string_t isvId,
        std::shared_ptr<FullConsumptionHeartbeatDto> fullConsumptionHeartbeatDto
    ) const;
    /// <summary>
    /// Creates a usage heartbeat
    /// </summary>
    /// <remarks>
    /// &lt;a href&#x3D;\&quot;https://support.slascone.com/hc/en-us/articles/360016055537-PRODUCT-ANALYTICS\&quot;&gt;More Information&lt;/a&gt;.
    /// </remarks>
    /// <param name="isvId"></param>
    /// <param name="fullUsageHeartbeatDto"></param>
    pplx::task<utility::string_t> addUsageHeartbeat(
        utility::string_t isvId,
        std::shared_ptr<FullUsageHeartbeatDto> fullUsageHeartbeatDto
    ) const;
    /// <summary>
    /// Creates a usage heartbeat (alternative method based on the feature&#39;s name instead of its Id)
    /// </summary>
    /// <remarks>
    /// &lt;a href&#x3D;\&quot;https://support.slascone.com/hc/en-us/articles/360016055537-PRODUCT-ANALYTICS\&quot;&gt;More Information&lt;/a&gt;.
    /// </remarks>
    /// <param name="isvId"></param>
    /// <param name="fullUsageHeartbeatByNameDto"></param>
    pplx::task<utility::string_t> addUsageHeartbeatByName(
        utility::string_t isvId,
        std::shared_ptr<FullUsageHeartbeatByNameDto> fullUsageHeartbeatByNameDto
    ) const;
    /// <summary>
    /// Rollbacks a consumption heartbeat
    /// </summary>
    /// <remarks>
    /// &lt;a href&#x3D;\&quot;https://support.slascone.com/hc/en-us/articles/360016057197-CONSUMPTION-BASED-LIMITATIONS\&quot;&gt;More Information&lt;/a&gt;.
    /// </remarks>
    /// <param name="isvId"></param>
    /// <param name="consumptionTransactionDto"></param>
    pplx::task<std::shared_ptr<ConsumptionDto>> rollbackConsumptionHeartbeat(
        utility::string_t isvId,
        std::shared_ptr<ConsumptionTransactionDto> consumptionTransactionDto
    ) const;

protected:
    std::shared_ptr<const ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_API_DataGatheringApi_H_ */

